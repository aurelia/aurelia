# Defaults for all jobs

defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: aureliaeffect/circleci-v2:latest

# Variables
var_1: &cache_key aurelia-{{ .Branch }}-{{ checksum "package-lock.json" }}

# Reusable steps
aliases:
  - &step_restore_cache
    restore_cache:
      key: *cache_key
  - &step_attach_workspace
    attach_workspace:
      at: ~/repo

version: 2
jobs:
  install:
    <<: *defaults
    steps:
      - run:
          name: "Show npm and node versions"
          command: |
            node --version
            npm --version
      - checkout
      - run:
          name: "Install npm packages"
          command: |
            npm ci -dd
      - save_cache:
          key: *cache_key
          paths:
            - node_modules

  build:
    <<: *defaults
    steps:
      - checkout
      - *step_restore_cache
      - run:
          name: "Bootstrap and build the packages"
          command: |
            npm run bootstrap
            npm run build-all
      - run:
          name: "Create tarballs from the build outputs"
          command: |
            npm run publish:local
      - persist_to_workspace:
          root: ~/repo
          paths:
            - packages/*/dist
            - packages/*/node_modules
            - packages/*/*.tgz

  unit_tests_firefox:
    <<: *defaults
    steps:
      - checkout
      - *step_restore_cache
      - run:
          name: "Run unit tests"
          command: |
            npm run test-firefox
          environment:
            TS_NODE_PROJECT: ./scripts/tsconfig.json
            JUNIT_REPORT_NAME: test-results.xml
            TS_NODE_PROJECT: ./scripts/tsconfig.json
      - store_test_results:
          path: ./packages/jit/junit
      - store_test_results:
          path: ./packages/kernel/junit
      - store_test_results:
          path: ./packages/runtime/junit
      - store_artifacts:
          path: ./packages/jit/junit
      - store_artifacts:
          path: ./packages/kernel/junit
      - store_artifacts:
          path: ./packages/runtime/junit

  unit_tests_chrome:
    <<: *defaults
    steps:
      - checkout
      - *step_restore_cache
      - run:
          name: "Run unit tests"
          command: |
            npm run test
          environment:
            JUNIT_REPORT_PATH: ./junit/
            JUNIT_REPORT_NAME: test-results.xml
            TS_NODE_PROJECT: ./scripts/tsconfig.json
      - run:
          name: Process coverage results for Code Climate
          command: |
            mkdir ~/repo/code-climate
            ~/cc-test-reporter format-coverage ~/repo/packages/jit/coverage/lcov.info -t lcov -o ~/repo/code-climate/coverage-jit.json
            ~/cc-test-reporter format-coverage ~/repo/packages/kernel/coverage/lcov.info -t lcov -o ~/repo/code-climate/coverage-kernel.json
            ~/cc-test-reporter format-coverage ~/repo/packages/runtime/coverage/lcov.info -t lcov -o ~/repo/code-climate/coverage-runtime.json
            ~/cc-test-reporter sum-coverage ~/repo/code-climate/coverage-*.json -p 3 -o ~/repo/coverage-combined.json
            ~/cc-test-reporter upload-coverage -i ~/repo/coverage-combined.json
          environment:
            CC_TEST_REPORTER_ID: 29ad19bd108faacbd91b36265a5b5e891b404571ebf937f40655157877aa71a1
      - run:
          name: Process coverage for Codecov
          command: |
            codecov -f ~/repo/packages/jit/coverage/coverage-final.json
            codecov -f ~/repo/packages/kernel/coverage/coverage-final.json
            codecov -f ~/repo/packages/runtime/coverage/coverage-final.json
      - store_test_results:
          path: ./packages/jit/junit
      - store_test_results:
          path: ./packages/kernel/junit
      - store_test_results:
          path: ./packages/runtime/junit
      - store_artifacts:
          path: ./packages/jit/junit
      - store_artifacts:
          path: ./packages/kernel/junit
      - store_artifacts:
          path: ./packages/runtime/junit
      - store_artifacts:
          path: ./packages/jit/coverage
      - store_artifacts:
          path: ./packages/kernel/coverage
      - store_artifacts:
          path: ./packages/runtime/coverage

  e2e_browserstack:
    <<: *defaults
    steps:
      - checkout
      - *step_restore_cache
      - *step_attach_workspace
      - run:
          name: Install e2e tests
          command: |
            cd ./test/e2e
            npm install
            npm run build
      - run:
          name: Serve the e2e app in the background
          background: true
          command: |
            cd ./test/e2e
            npm run start
      - run:
          name: Run the e2e tests
          command: |
            cd ./test/e2e
            npm run e2e
      - run:
          name: Generate allure report
          command: |
            cd ./test/e2e
            npm run allure:generate
      - store_artifacts:
          path: ./test/e2e/allure-report
      - run:
          name: Post the link to allure report in PR comment
          command: |
            cd ./test/e2e
            npm run allure:post

  e2e_benchmark_vnext:
    <<: *defaults
    steps:
      - checkout
      - *step_restore_cache
      - *step_attach_workspace
      - run:
          name: Install e2e-benchmark/vnext
          command: |
            cd ~/repo/packages/examples/e2e-benchmark
            npm ci
            cd ~/repo/packages/examples/e2e-benchmark/vnext
            npm ci
            npm run build
      - run:
          name: Serve e2e-benchmark/vnext in the background
          background: true
          command: |
            cd ~/repo/packages/examples/e2e-benchmark/vnext
            npm run start
      - run:
          name: Run the e2e tests
          command: |
            cd ~/repo/packages/examples/e2e-benchmark/vnext
            npm run e2e

  e2e_benchmark_vcurrent:
    <<: *defaults
    steps:
      - checkout
      - *step_restore_cache
      - *step_attach_workspace
      - run:
          name: Install e2e-benchmark/vcurrent
          command: |
            cd ~/repo/packages/examples/e2e-benchmark
            npm ci
            cd ~/repo/packages/examples/e2e-benchmark/vcurrent
            npm ci
            npm run build
      - run:
          name: Serve e2e-benchmark/vcurrent in the background
          background: true
          command: |
            cd ~/repo/packages/examples/e2e-benchmark/vcurrent
            npm run start
      - run:
          name: Run the e2e tests
          command: |
            cd ~/repo/packages/examples/e2e-benchmark/vcurrent
            npm run e2e

  publish_nightly:
    <<: *defaults
    steps:
      - checkout
      - *step_restore_cache
      - *step_attach_workspace
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
      - run:
          name: Publish nightly release
          command: |
            npm run publish:nightly

workflows:
  version: 2
  default_workflow:
    jobs:
      - install
      - build:
          requires:
            - install
      - unit_tests_chrome:
          requires:
            - install
      - unit_tests_firefox:
          requires:
            - install
      - e2e_browserstack:
          requires:
            - build
      - e2e_benchmark_vnext:
          requires:
            - build
      - e2e_benchmark_vcurrent:
          requires:
            - build
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - install
      - build:
          requires:
            - install
      - unit_tests_chrome:
          requires:
            - install
      - unit_tests_firefox:
          requires:
            - install
      - e2e_browserstack:
          requires:
            - build
      - publish_nightly:
          requires:
            - build
            - unit_tests_chrome
            - unit_tests_firefox
            - e2e_browserstack

