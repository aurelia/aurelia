name: Release (manual)

on:
  workflow_dispatch:
    inputs:
      lane:
        description: "Which lane to publish?"
        type: choice
        options: [auto, dev, latest]
        default: auto
      dry_run:
        description: "Do not actually publish to npm"
        type: boolean
        default: false

permissions:
  contents: write
  pull-requests: write
  id-token: write

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          registry-url: https://registry.npmjs.org
          cache: npm

      - run: npm ci

      - name: Decide lane
        id: decide
        shell: bash
        run: |
          # detect pre-mode by presence of .changeset/pre.json
          if [ -f .changeset/pre.json ]; then PRE=on; else PRE=off; fi

          # normalize input -> effective lane
          case "${{ inputs.lane }}" in
            dev)    LANE=dev ;;
            latest) LANE=latest ;;
            auto)   if [ "$PRE" = "on" ]; then LANE=dev; else LANE=latest; fi ;;
          esac

          echo "pre=$PRE"   >> "$GITHUB_OUTPUT"
          echo "lane=$LANE" >> "$GITHUB_OUTPUT"

      - run: npm run build:release

      # Optional: dry-run for npm publish
      - name: Enable npm dry-run
        if: ${{ inputs.dry_run }}
        run: echo "NPM_CONFIG_DRY_RUN=true" >> "$GITHUB_ENV"

      # --- Dev prerelease path (publishes with dist-tag 'dev')
      - name: Changesets – prerelease (dev)
        if: ${{ steps.decide.outputs.lane == 'dev' }}
        uses: changesets/action@v1
        with:
          publish: npm run changeset:publish -- --tag dev
          title: "release(dev): version packages"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      # --- Stable path (publishes with dist-tag 'latest')
      - name: Changesets – stable (latest)
        if: ${{ steps.decide.outputs.lane == 'latest' }}
        uses: changesets/action@v1
        with:
          publish: npm run changeset:publish
          title: "release: version packages"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
