/* eslint-disable */
document.write(`<script type="importmap">${JSON.stringify({
  imports: {
    ...([
      'addons',
      'compat-v1',
      'dialog',
      'platform',
      'platform-browser',
      'metadata',
      'kernel',
      'runtime',
      'runtime-html',
      'route-recognizer',
      'fetch-client',
      'state',
      'store-v1',
      'i18n',
      'router',
      'router-lite',
      'testing',
      'ui-virtualization',
      'validation',
      'validation-html',
      'validation-i18n',
      'web-components',
    ].reduce((map, pkg) => {
      map[`@aurelia/${pkg}`] = `/base/packages/${pkg}/dist/esm/index.mjs`;
      return map;
    }, {
      'aurelia': `/base/packages/aurelia/dist/esm/index.mjs`
    })),
    'i18next': '/base/node_modules/i18next/dist/esm/i18next.js',
    'tslib': '/base/node_modules/tslib/tslib.es6.js',
    ...([
      'typeof',
      'objectSpread',
      'classCallCheck',
      'createClass',
      'possibleConstructorReturn',
      'getPrototypeOf',
      'assertThisInitialized',
      'inherits',
      'toConsumableArray',
      'slicedToArray',
    ].reduce((map, babelHelper) => {
      map[`@babel/runtime/helpers/esm/${babelHelper}`]
        = `/base/node_modules/@babel/runtime/helpers/esm/${babelHelper}.js`;
      map[`@babel/runtime/${babelHelper}`]
        = `/base/node_modules/@babel/runtime/helpers/esm/${babelHelper}.js`;
      return map;
    }, {})),

    // rxjs operators for storev1 tests
    ...([
      'audit',
      'auditTime',
      'buffer',
      'bufferCount',
      'bufferTime',
      'bufferToggle',
      'bufferWhen',
      'catchError',
      'combineAll',
      'combineLatest',
      'concat',
      'concatAll',
      'concatMap',
      'concatMapTo',
      'count',
      'debounce',
      'debounceTime',
      'defaultIfEmpty',
      'delay',
      'delayWhen',
      'dematerialize',
      'distinct',
      'distinctUntilChanged',
      'distinctUntilKeyChanged',
      'elementAt',
      'endWith',
      'every',
      'exhaust',
      'exhaustMap',
      'expand',
      'filter',
      'finalize',
      'find',
      'findIndex',
      'first',
      'groupBy',
      'ignoreElements',
      'isEmpty',
      'last',
      'map',
      'mapTo',
      'materialize',
      'max',
      'merge',
      'mergeAll',
      'mergeMap',
      'mergeMapTo',
      'mergeScan',
      'min',
      'multicast',
      'observeOn',
      'onErrorResumeNext',
      'pairwise',
      'partition',
      'pluck',
      'publish',
      'publishBehavior',
      'publishLast',
      'publishReplay',
      'race',
      'reduce',
      'repeat',
      'repeatWhen',
      'retry',
      'retryWhen',
      'refCount',
      'sample',
      'sampleTime',
      'scan',
      'sequenceEqual',
      'share',
      'shareReplay',
      'single',
      'skip',
      'skipLast',
      'skipUntil',
      'skipWhile',
      'startWith',
      'subscribeOn',
      'switchAll',
      'switchMap',
      'switchMapTo',
      'take',
      'takeLast',
      'takeUntil',
      'takeWhile',
      'tap',
      'throttle',
      'throttleTime',
      'throwIfEmpty',
      'timeInterval',
      'timeout',
      'timeoutWith',
      'timestamp',
      'toArray',
      'window',
      'windowCount',
      'windowTime',
      'windowToggle',
      'windowWhen',
      'withLatestFrom',
      'zip',
      'zipAll',
    ].reduce((map, operator) => {
      map[`rxjs/_esm5/internal/operators/${operator}`]
        = map[`/base/node_modules/rxjs/_esm5/internal/operators/${operator}`]
        = `/base/node_modules/rxjs/_esm5/internal/operators/${operator}.js`;
      return map;
    }, {
      'rxjs': '/base/node_modules/rxjs/_esm5/index.js',
      'rxjs/operators': '/base/node_modules/rxjs/_esm5/operators/index.js',
    })),
    // rxjs internal
    ...([
      'innerSubscribe',
      'innerSubscriber',
      'observable/timer',
      'scheduler/async',
      'Subscriber',
      'util/isScheduler',
      'Subscription',
      'util/subscribeToResult',
      'OuterSubscriber',
      'observable/combineLatest',
      'util/isArray',
      'observable/from',
      'observable/concat',
      'util/isDate',
      'Notification',
      'Observable',
      'Subject',
      'util/ArgumentOutOfRangeError',
      'observable/of',
      'util/EmptyError',
      'util/identity',
    ].reduce((map, internalModule) => {
      map[`rxjs/_esm5/internal/${internalModule}`]
        = map[`/base/node_modules/rxjs/_esm5/internal/${internalModule}`]
        = `/base/node_modules/rxjs/_esm5/internal/${internalModule}.js`;
      return map;
    }, {}))
  }
})}</script>`);
